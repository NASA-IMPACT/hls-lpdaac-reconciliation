name: Deploy

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      PYTHON_VERSION:
        required: true
        type: string
      TOX_MIN_VERSION:
        required: true
        type: string

defaults:
  run:
    shell: bash

# See https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services#updating-your-github-actions-workflow
permissions:
  id-token: write # required for requesting the JWT
  contents: read  # required for actions/checkout

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ inputs.PYTHON_VERSION }}"
          cache: pip
          cache-dependency-path: setup.py
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "tox>=${{ inputs.TOX_MIN_VERSION }}"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME_ARN }}
          role-session-name: ${{ github.actor }}
      - name: Convert secrets to environment variables
        env:
          SECRETS_JSON: ${{ toJson(secrets) }}
        run: |
          while read -rd $'' line; do
            echo "$line" >> $GITHUB_ENV
          done < <(
            jq -r <<<"$SECRETS_JSON" 'to_entries|map("\(.key)=\(.value)\u0000")[]'
          )
      - name: Convert vars to environment variables
        env:
          VARS_JSON: ${{ toJson(vars) }}
        run: |
          while read -rd $'' line; do
            echo "$line" >> $GITHUB_ENV
          done < <(
            jq -r <<<"$VARS_JSON" 'to_entries|map("\(.key)=\(.value)\u0000")[]'
          )
      - name: Deploy stack to ${{ inputs.environment }}
        run: |
          make deploy
