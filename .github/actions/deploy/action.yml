name: Deploy
description: Deploy stack

inputs:
  aws_region:
    description: AWS region
  aws_role_to_assume_arn:
    description: AWS role to assume
    required: true
  aws_role_session_name:
    description: AWS role session name
    required: true
  vars_json:
    description: Environment variables as a JSON object
  secrets_json:
    description: Secrets as a JSON object
  command:
    description: Bash command to deploy stack

runs:
  using: composite
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: "${{ inputs.aws_region || 'us-west-2' }}"
        role-to-assume: "${{ inputs.aws_role_to_assume_arn }}"
        role-session-name: "${{ inputs.aws_role_session_name }}"

    - name: Convert secrets to environment variables
      shell: bash
      run: |
        while read -rd $'' line; do
          echo "$line" >> $GITHUB_ENV
        done < <(jq -r <<<'${{ inputs.secrets_json }}' 'to_entries|map("\(.key)=\(.value)\u0000")[]')

    - name: Convert vars to environment variables
      shell: bash
      run: |
        while read -rd $'' line; do
          echo "$line" >> $GITHUB_ENV
        done < <(jq -r <<<'${{ inputs.vars_json }}' 'to_entries|map("\(.key)=\(.value)\u0000")[]')

    - name: Get user's email address
      if: ${{ ! env.HLS_LPDAAC_NOTIFICATION_EMAIL_ADDRESS }}
      id: get-email-address
      uses: actions/github-script@v7
      with:
        script: |
          const { id, login } = ${{ toJson(github.event.sender) }};
          const { email } = (await github.rest.users.getByUsername({
            username: "${{ github.event.sender.login }}"
          })).data;

          return email ?? `${id}+${login}@users.noreply.github.com`;
        result-encoding: string

    - name: Export user's email address to environment
      if: ${{ ! env.HLS_LPDAAC_NOTIFICATION_EMAIL_ADDRESS }}
      shell: bash
      run: echo "HLS_LPDAAC_NOTIFICATION_EMAIL_ADDRESS=${{ steps.get-email-address.outputs.result }}" >> $GITHUB_ENV

    - name: Install tooling and dependencies
      uses: ./.github/actions/install
      with:
        cdk: true

    - name: Deploy stack
      shell: bash
      run: |
        ${{ inputs.command }}
